using gold.**

toSet(C) :=  {x|  x in C}

function createParser(A):IPushdownAutomaton begin
	Q:=(0‥95
	)
	Σ:=toSet(A)∪{' ', '\n'}
	Γ:={'1'}
	q₀:=0
	F:= {95}
	M:=GPushdownAutomaton(Q,Σ,Γ,q₀,F)
	SkipChars := {' ', '\n'}   

	M.delta(48,52,'D').pop("1")
	M.delta(53,10,'[').push("1")
	M.delta(52,53,':').ignore()
	M.delta(9,10,'|').pop("1")
	M.delta(22,23,'v').ignore()
	M.delta(23,24,',').ignore()
	M.delta(6,8,'|').push("1")
	M.delta(33,95,']').pop("1")
	M.delta(33,10,';').ignore()
	M.delta(40,41,'#').ignore()
	M.delta(40,41,'v').ignore()
	M.delta(10,21,'g').ignore()
	M.delta(16,17,'v').ignore()
	M.delta(9,9,'v').pop("1") 
	M.delta(25,10,';').ignore()
	M.delta(10,26,'m').ignore()
	M.delta(21,22,':').ignore()
	M.delta(22,23,'#').ignore()
	M.delta(17,95,']').pop("1")
	M.delta(2,3,'v').ignore()
	M.delta(3,3, ',').push("1")
	M.delta(11, 4, 'P').ignore()
	M.delta(4,5,'v').ignore()
	M.delta(5,6,'[').push("1")
	M.delta(64,64,',').push("1")
	M.delta(63,64,'B').ignore()
	M.delta(64,64,'d').pop("1")
	M.delta(64,95,']').pop("1")
	M.delta(64,64,'v').pop("1")
	M.delta(64,64,'#').pop("1")
	M.delta(17,10,';').ignore()
	M.delta(10,18,'t').ignore()
	M.delta(18,19,':').ignore()
	M.delta(10,34,'M').ignore()
	M.delta(47,48,'c').ignore()
	M.delta(49, 10, ':').ignore() 
	M.delta(95,95, ']').pop("1")
	M.delta(95,57, 'e').pop("1")
	M.delta(34,35,':').ignore()
	M.delta(35,36,'#').ignore()
	M.delta(26,27,':').ignore()
	M.delta(14,15,'v').ignore()
	M.delta(24,25,'#').ignore()
	M.delta(10,39,'I').ignore()
	M.delta(36,37,',').ignore()
	M.delta(29,30,':').ignore()
	M.delta(30,31,'v').ignore()
	M.delta(10,44,'n').ignore()
	M.delta(44,45,':').ignore()
	M.delta(59,60,':').ignore()
	M.delta(60,61,'v').ignore()
	M.delta(60,61,'#').ignore()
	M.delta(10, 49, '0').ignore()
	M.delta(20,10,';').ignore()
	M.delta(27,28,'v').ignore()
	M.delta(20,95,']').pop("1")
	M.delta(27,28,'#').ignore()
	M.delta(35,36,'v').ignore()
	M.delta(28,95,']').pop("1")
	M.delta(95,10, '[').push("1")
	M.delta(10,51,'w').ignore()
	M.delta(51,10,':').push("1")
	M.delta(61,10,'[').push("1")
	M.delta(63,64,'v').ignore()
	M.delta(62,63,':').ignore()
	M.delta(63,10,';').ignore()
	M.delta(63,95,']').pop("1")
	M.delta(63,64,'#').ignore()
	M.delta(54,10,':').push("11")
	M.delta(24,25,'v').ignore()
	M.delta(25,95,']').pop("1")
	M.delta(10,54,'i').ignore()
	M.delta(57,58,':').ignore()
	M.delta(58,10,'[').push("1")
	M.delta(10,59,'r').ignore()
	M.delta(15,16,',').ignore()
	M.delta(30,31,'#').ignore()
	M.delta(3, 3, 'v').pop("1")
	M.delta(3, 11, ';').ignore()
	M.delta(31,32,',').ignore()
	M.delta(42,43,'c').ignore()
	M.delta(43,95,']').pop("1")
	M.delta(33,55,'T').pop("1")
	M.delta(33,52,'D').pop("1")
	M.delta(10,29,'p').ignore()
	M.delta(41,42,',').ignore()
	M.delta(48,95,']').pop("1")
	M.delta(45,10,';').ignore()
	M.delta(10,46,'f').ignore()
	M.delta(95,5,'v').ignore()
	M.delta(46,47,':').ignore()
	M.delta(64,64,'B').pop("1")
	M.delta(48,10,';').ignore()
	M.delta(48,55,'T').pop("1")
	M.delta(63,64,'c').ignore()
	M.delta(63,64,'d').ignore()
	M.delta(64,64,'c').pop("1")
	M.delta(37,38,'d').ignore()
	M.delta(38,10,';').ignore()
	M.delta(38,55,'T').pop("1")
	M.delta(38,52,'D').pop("1")
	M.delta(55,56,':').ignore()
	M.delta(56,10,'[').push("1")
	M.delta(45,95,']').pop("1")
	M.delta(32,33,'B').ignore()
	M.delta(39,40,':').ignore()
	M.delta(43,10,';').ignore()
	M.delta(43,55,'T').pop("1")
	M.delta(43,52,'D').pop("1")
	M.delta(28,10,';').ignore()
	M.delta(8,9,'v').ignore()
	M.delta(8,10,'|').pop("1")
	M.delta(9,9,',').push("1")
	M.delta(13,14,':').ignore()
	M.delta(0,1,'R').ignore()
	M.delta(1,2,'V').ignore()
	M.delta(19,20,'d').ignore()
	M.delta(14,15,'#').ignore()


 for each q in Q do
 	for each s in SkipChars do
 	   M.delta(q,q,λ+s).ignore()
 end
 
 end
 
return M
end
